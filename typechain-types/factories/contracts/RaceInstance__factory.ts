/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RaceInstance,
  RaceInstanceInterface,
} from "../../contracts/RaceInstance";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_entryFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_host",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyPlayer",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidState",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTapCount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTeam",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAWinner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughPlayers",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFactory",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyHost",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "team",
        type: "uint8",
      },
    ],
    name: "PlayerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "winningTeam",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "team1Taps",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "team2Taps",
        type: "uint256",
      },
    ],
    name: "RaceEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "RaceStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "winners",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tapCounts",
        type: "uint256[]",
      },
    ],
    name: "ResultsRecorded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WinningsClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "team",
        type: "uint8",
      },
    ],
    name: "addPlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimWinnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getClaimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTeam1Players",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTeam2Players",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalPlayers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "host",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isPlayer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerTaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerTeam",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prizePool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "raceId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "winners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tapCounts",
        type: "uint256[]",
      },
    ],
    name: "recordResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum RaceInstance.RaceState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "team1Players",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "team1TotalTaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "team2Players",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "team2TotalTaps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winningTeam",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61012060405234801561001157600080fd5b506040516114fc3803806114fc83398101604081905261003091610083565b6001600081905560809490945260a0929092526001600160a01b0390811660c0523360e0521661010052805460ff191690556100ca565b80516001600160a01b038116811461007e57600080fd5b919050565b6000806000806080858703121561009957600080fd5b8451602086015190945092506100b160408601610067565b91506100bf60608601610067565b905092959194509250565b60805160a05160c05160e051610100516113cb6101316000396000818161036501526105c30152600081816103eb015281816109060152610a1d0152600081816104cf0152610c4b0152600061018501526000818161049b01526108d301526113cb6000f3fe60806040526004361061014f5760003560e01c80637dc0d1d0116100b6578063de3f18e21161006f578063de3f18e21461044f578063e12f3a6114610469578063ed3a865e14610489578063f437bc59146104bd578063f9d4f21e146104f1578063fc8170dd1461050757600080fd5b80637dc0d1d0146103535780638ef82f7614610387578063b401faf11461039d578063c19d93fb146103b2578063c45a0155146103d9578063c9a1ca751461040d57600080fd5b8063424d490a11610108578063424d490a146102965780634529cae7146102b65780636ad7ed47146102cb578063719ce73e146102e057806372a83c24146102f657806373b2e80e1461032357600080fd5b8063072ea61c1461017357806308c8f94f146101ba57806309c95e10146101f25780630dd42c3d146102325780631e6ae3831461025257806320e8302d1461027457600080fd5b3661016e57346002600082825461016691906110ae565b925050819055005b600080fd5b34801561017f57600080fd5b506101a77f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b3480156101c657600080fd5b506101da6101d53660046110c7565b61051c565b6040516001600160a01b0390911681526020016101b1565b3480156101fe57600080fd5b5061022261020d3660046110fc565b60056020526000908152604090205460ff1681565b60405190151581526020016101b1565b34801561023e57600080fd5b506101da61024d3660046110c7565b610546565b34801561025e57600080fd5b50610267610556565b6040516101b19190611117565b34801561028057600080fd5b5061029461028f3660046111af565b6105b8565b005b3480156102a257600080fd5b506102946102b1366004611220565b610a12565b3480156102c257600080fd5b506101a7610c29565b3480156102d757600080fd5b50610294610c40565b3480156102ec57600080fd5b506101a760025481565b34801561030257600080fd5b506101a76103113660046110fc565b60076020526000908152604090205481565b34801561032f57600080fd5b5061022261033e3660046110fc565b600b6020526000908152604090205460ff1681565b34801561035f57600080fd5b506101da7f000000000000000000000000000000000000000000000000000000000000000081565b34801561039357600080fd5b506101a760095481565b3480156103a957600080fd5b50610294610d25565b3480156103be57600080fd5b506001546103cc9060ff1681565b6040516101b19190611273565b3480156103e557600080fd5b506101da7f000000000000000000000000000000000000000000000000000000000000000081565b34801561041957600080fd5b5061043d6104283660046110fc565b60066020526000908152604090205460ff1681565b60405160ff90911681526020016101b1565b34801561045b57600080fd5b50600a5461043d9060ff1681565b34801561047557600080fd5b506101a76104843660046110fc565b610f0e565b34801561049557600080fd5b506101a77f000000000000000000000000000000000000000000000000000000000000000081565b3480156104c957600080fd5b506101da7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104fd57600080fd5b506101a760085481565b34801561051357600080fd5b5061026761100e565b6003818154811061052c57600080fd5b6000918252602090912001546001600160a01b0316905081565b6004818154811061052c57600080fd5b606060038054806020026020016040519081016040528092919081815260200182805480156105ae57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610590575b5050505050905090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610601576040516380fee10560e01b815260040160405180910390fd5b60018060015460ff16600281111561061b5761061b61125d565b146106395760405163baf3f0f760e01b815260040160405180910390fd5b61064161106e565b83821461066157604051634ec4810560e11b815260040160405180910390fd5b60008490036106835760405163e0d9272760e01b815260040160405180910390fd5b6000600660008787600081811061069c5761069c61129b565b90506020020160208101906106b191906110fc565b6001600160a01b03168152602081019190915260400160009081205460ff169150805b8681101561080b578260ff16600660008a8a858181106106f6576106f661129b565b905060200201602081019061070b91906110fc565b6001600160a01b0316815260208101919091526040016000205460ff161461074657604051636f6fc75f60e11b815260040160405180910390fd5b8585828181106107585761075861129b565b9050602002013560000361077f5760405163e0d9272760e01b815260040160405180910390fd5b8585828181106107915761079161129b565b90506020020135600760008a8a858181106107ae576107ae61129b565b90506020020160208101906107c391906110fc565b6001600160a01b031681526020810191909152604001600020558585828181106107ef576107ef61129b565b905060200201358261080191906110ae565b91506001016106d4565b50600a805460ff191660ff841690811790915560010361082f576008819055610835565b60098190555b6001805460ff191660021790556040517f4fed0d864f0ae3393ac74ab0803dbed3389fbc56aa5f6a46288efe92102bfd7d906108789089908990899089906112b1565b60405180910390a1600a546008546009546040805160ff9094168452602084019290925282820152517f8ed9086378e8924215a3eef186a22fa9f89ca5b74eb6247b4de320a9a79a65929181900360600190a1600a546040517f0000000000000000000000000000000000000000000000000000000000000000602482015260ff90911660448201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169060640160408051601f198184030181529181526020820180516001600160e01b031663e1fa0b7d60e01b17905251610967919061132d565b6000604051808303816000865af19150503d80600081146109a4576040519150601f19603f3d011682016040523d82523d6000602084013e6109a9565b606091505b50509050806109fe5760405162461bcd60e51b815260206004820152601b60248201527f466163746f7279206e6f74696669636174696f6e206661696c65640000000000604482015260640160405180910390fd5b505050610a0b6001600055565b5050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a5b57604051630636a15760e11b815260040160405180910390fd5b60008060015460ff166002811115610a7557610a7561125d565b14610a935760405163baf3f0f760e01b815260040160405180910390fd5b6001600160a01b03831660009081526005602052604090205460ff1615610acd5760405163912e4f6b60e01b815260040160405180910390fd5b8160ff16600114158015610ae557508160ff16600214155b15610b0357604051636f6fc75f60e11b815260040160405180910390fd5b6001600160a01b0383166000908152600560209081526040808320805460ff19908116600190811790925560069093529220805460ff86169216821790559003610b9757600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b038516179055610be3565b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0385161790555b60405160ff831681526001600160a01b038416907f3138d9d3c5b626eff736a8d5bf07552d9f568087655c46803ee715f424ec1b8e9060200160405180910390a2505050565b600454600354600091610c3b916110ae565b905090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c8857604051620f491b60e11b815260040160405180910390fd5b60008060015460ff166002811115610ca257610ca261125d565b14610cc05760405163baf3f0f760e01b815260040160405180910390fd5b6003541580610ccf5750600454155b15610ced5760405163f770074360e01b815260040160405180910390fd5b6001805460ff1916811790556040517f40f28f962414a34b088df82539667c1668a54e8adac0002219a4c0f7d5c5d0e690600090a150565b610d2d61106e565b60028060015460ff166002811115610d4757610d4761125d565b14610d655760405163baf3f0f760e01b815260040160405180910390fd5b600a543360009081526006602052604090205460ff908116911614610d9d576040516358cd4fc160e11b815260040160405180910390fd5b336000908152600b602052604090205460ff1615610dce57604051630c8d9eab60e31b815260040160405180910390fd5b336000908152600760205260408120549003610dfd576040516358cd4fc160e11b815260040160405180910390fd5b336000908152600b60205260408120805460ff19166001908117909155600a5460ff1614610e2d57600954610e31565b6008545b60025433600090815260076020526040812054929350918391610e539161135c565b610e5d9190611373565b604051909150600090339083908381818185875af1925050503d8060008114610ea2576040519150601f19603f3d011682016040523d82523d6000602084013e610ea7565b606091505b5050905080610ec9576040516312171d8360e31b815260040160405180910390fd5b60405182815233907f1a31e733a172afcf46074b3106c17f0c298e226442682a03c1e99ce256139ec29060200160405180910390a250505050610f0c6001600055565b565b6000600260015460ff166002811115610f2957610f2961125d565b14610f3657506000919050565b600a546001600160a01b03831660009081526006602052604090205460ff908116911614610f6657506000919050565b6001600160a01b0382166000908152600b602052604090205460ff1615610f8f57506000919050565b6001600160a01b0382166000908152600760205260408120549003610fb657506000919050565b600a5460009060ff16600114610fce57600954610fd2565b6008545b6002546001600160a01b0385166000908152600760205260409020549192508291610ffd919061135c565b6110079190611373565b9392505050565b606060048054806020026020016040519081016040528092919081815260200182805480156105ae576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610590575050505050905090565b60026000540361109157604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b634e487b7160e01b600052601160045260246000fd5b808201808211156110c1576110c1611098565b92915050565b6000602082840312156110d957600080fd5b5035919050565b80356001600160a01b03811681146110f757600080fd5b919050565b60006020828403121561110e57600080fd5b611007826110e0565b602080825282518282018190526000918401906040840190835b818110156111585783516001600160a01b0316835260209384019390920191600101611131565b509095945050505050565b60008083601f84011261117557600080fd5b50813567ffffffffffffffff81111561118d57600080fd5b6020830191508360208260051b85010111156111a857600080fd5b9250929050565b600080600080604085870312156111c557600080fd5b843567ffffffffffffffff8111156111dc57600080fd5b6111e887828801611163565b909550935050602085013567ffffffffffffffff81111561120857600080fd5b61121487828801611163565b95989497509550505050565b6000806040838503121561123357600080fd5b61123c836110e0565b9150602083013560ff8116811461125257600080fd5b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061129557634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052603260045260246000fd5b6040808252810184905260008560608301825b878110156112f2576001600160a01b036112dd846110e0565b168252602092830192909101906001016112c4565b5083810360208501528481526001600160fb1b0385111561131257600080fd5b8460051b915081866020830137016020019695505050505050565b6000825160005b8181101561134e5760208186018101518583015201611334565b506000920191825250919050565b80820281158282048414176110c1576110c1611098565b60008261139057634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220e31de043389572cfbaf61c8bc6b8e61b26c634dd159e5b5dc9876307ecc7bc1064736f6c634300081c0033";

type RaceInstanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RaceInstanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RaceInstance__factory extends ContractFactory {
  constructor(...args: RaceInstanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _raceId: BigNumberish,
    _entryFee: BigNumberish,
    _host: AddressLike,
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _raceId,
      _entryFee,
      _host,
      _oracle,
      overrides || {}
    );
  }
  override deploy(
    _raceId: BigNumberish,
    _entryFee: BigNumberish,
    _host: AddressLike,
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _raceId,
      _entryFee,
      _host,
      _oracle,
      overrides || {}
    ) as Promise<
      RaceInstance & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RaceInstance__factory {
    return super.connect(runner) as RaceInstance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RaceInstanceInterface {
    return new Interface(_abi) as RaceInstanceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RaceInstance {
    return new Contract(address, _abi, runner) as unknown as RaceInstance;
  }
}
